# Nom Prenom, PREPA 2
from math import gcd

class Fraction:
    def __init__(self, num, den):
        """Initializes a Fraction with numerator and denominator."""
        self.num = num
        self.den = den

    def invert(self):
        """Returns a Fraction that is the inverse of the current object."""
        return Fraction(self.den, self.num)

    def simplify(self):
        """Returns a simplified Fraction."""
        common_divisor = gcd(self.num, self.den)
        return Fraction(self.num // common_divisor, self.den // common_divisor)

    def __mul__(self, other):
        """Multiplies two Fractions and returns a new Fraction."""
        new_num = self.num * other.num
        new_den = self.den * other.den
        return Fraction(new_num, new_den)

    def __add__(self, other):
        """Adds two Fractions and returns a new Fraction."""
        new_num = self.num * other.den + other.num * self.den
        new_den = self.den * other.den
        return Fraction(new_num, new_den)

    def __sub__(self, other):
        """Subtracts two Fractions and returns a new Fraction."""
        new_num = self.num * other.den - other.num * self.den
        new_den = self.den * other.den
        return Fraction(new_num, new_den)

    def __truediv__(self, other):
        """Divides two Fractions and returns a new Fraction."""
        new_num = self.num * other.den
        new_den = self.den * other.num
        return Fraction(new_num, new_den)

    def __str__(self):
        """Displays the Fraction as 'numerator/denominator'."""
        return f"{self.num}/{self.den}"

    @classmethod
    def from_string(cls, fraction_str):
        """Creates a Fraction from a string in the format 'numerator/denominator'."""
        num, den = map(int, fraction_str.split('/'))
        return cls(num, den)

def main():
    f1 = Fraction(2, 4)
    f2 = Fraction(1, 4)
    f3 = f1 + f2
    f4 = f1 - f2
    f5 = f1 * f2
    f6 = f1 / f2
    f7 = Fraction(4, 10)
    f8 = Fraction.from_string('5/10')

    print(f3)  # affiche: 3/4
    print(f4)  # affiche: 1/4
    print(f5)  # affiche: 1/8
    print(f6)  # affiche: 2
    print(f7.simplify())  # affiche: 2/5
    print(f7.invert())  # affiche: 10/4
    print(f8)  # affiche: 5/10

if __name__ == "__main__":
    main()
